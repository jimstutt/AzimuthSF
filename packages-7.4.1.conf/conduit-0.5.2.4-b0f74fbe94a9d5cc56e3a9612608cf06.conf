name: conduit
version: 0.5.2.4
id: conduit-0.5.2.4-b0f74fbe94a9d5cc56e3a9612608cf06
license: BSD3
copyright:
maintainer: michael@snoyman.com
stability:
homepage: http://github.com/snoyberg/conduit
package-url:
synopsis: Streaming data processing library.
description: @conduit@ is a solution to the streaming data problem, allowing for production, transformation, and consumption of streams of data in constant memory. It is an alternative to lazy I\/O which guarantees deterministic resource handling, and fits in the same general solution space as @enumerator@/@iteratee@ and @pipes@. For a brief tutorial, please see the "Data.Conduit" module.
             .
             Release history:
             .
             [0.5] The internals of the package are now separated to the .Internal module, leaving only the higher-level interface in the advertised API. Internally, switched to a @Leftover@ constructor and slightly tweaked the finalization semantics.
             .
             [0.4] Inspired by the design of the pipes package: we now have a single unified type underlying @Source@, @Sink@, and @Conduit@. This type is named @Pipe@. There are type synonyms provided for the other three types. Additionally, @BufferedSource@ is no longer provided. Instead, the connect-and-resume operator, @$$+@, can be used for the same purpose.
             .
             [0.3] ResourceT has been greatly simplified, specialized for IO, and moved into a separate package. Instead of hard-coding ResourceT into the conduit datatypes, they can now live around any monad. The Conduit datatype has been enhanced to better allow generation of streaming output. The SourceResult, SinkResult, and ConduitResult datatypes have been removed entirely.
             .
             [0.2] Instead of storing state in mutable variables, we now use CPS. A @Source@ returns the next @Source@, and likewise for @Sink@s and @Conduit@s. Not only does this take better advantage of GHC\'s optimizations (about a 20% speedup), but it allows some operations to have a reduction in algorithmic complexity from exponential to linear. This also allowed us to remove the @Prepared@ set of types. Also, the @State@ functions (e.g., @sinkState@) use better constructors for return types, avoiding the need for a dummy state on completion.
             .
             [0.1] @BufferedSource@ is now an abstract type, and has a much more efficient internal representation. The result was a 41% speedup on microbenchmarks (note: do not expect speedups anywhere near that in real usage). In general, we are moving towards @BufferedSource@ being a specific tool used internally as needed, but using @Source@ for all external APIs.
             .
             [0.0] Initial release.
category: Data, Conduit
author: Michael Snoyman
exposed: True
exposed-modules: Data.Conduit Data.Conduit.Binary Data.Conduit.Text
                 Data.Conduit.List Data.Conduit.Lazy Data.Conduit.Internal
                 Data.Conduit.Util
hidden-modules: System.Win32File Data.Conduit.Util.Source
                Data.Conduit.Util.Sink Data.Conduit.Util.Conduit
trusted: False
import-dirs: C:\Users\jim\snap-boiler-plate/conduit-0.5.2.4\ghc-7.4.1
library-dirs: C:\Users\jim\snap-boiler-plate/conduit-0.5.2.4\ghc-7.4.1
hs-libraries: HSconduit-0.5.2.4
extra-libraries:
extra-ghci-libraries:
include-dirs:
includes:
depends: base-4.5.0.0-597748f6f53a7442bcae283373264bb6
         bytestring-0.9.2.1-df82064cddbf74693df4e042927e015e
         containers-0.4.2.1-7c54595400348f577b3b4a45691c5afd
         lifted-base-0.1.2-d21a14e125091b8ab19c0294680d1bb9
         monad-control-0.3.1.4-e68a839396577597a9a0d789749a1326
         resourcet-0.4.0.1-a915e2ba279405bfa7ed515c9144a632
         text-0.11.2.0-b2986f5478f0efa626f8ba0494ed9670
         transformers-0.3.0.0-e822211489f7414505ab945e95cef411
         transformers-base-0.4.1-9d46f3490afd5ac7672c373f71a7a4b0
         void-0.5.8-e3590ba1635a741356545920c07a89c1
hugs-options:
cc-options:
ld-options:
framework-dirs:
frameworks:
haddock-interfaces: C:\Users\jim\snap-boiler-plate/\doc\conduit-0.5.2.4\html\conduit.haddock
haddock-html: C:\Users\jim\snap-boiler-plate/\doc\conduit-0.5.2.4\html
