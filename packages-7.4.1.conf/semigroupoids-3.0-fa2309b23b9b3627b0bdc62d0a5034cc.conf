name: semigroupoids
version: 3.0
id: semigroupoids-3.0-fa2309b23b9b3627b0bdc62d0a5034cc
license: BSD3
copyright: Copyright (C) 2011 Edward A. Kmett
maintainer: Edward A. Kmett <ekmett@gmail.com>
stability: provisional
homepage: http://github.com/ekmett/semigroupoids
package-url:
synopsis: Haskell 98 semigroupoids: Category sans id
description: Provides a wide array of semigroupoids and operations for working with semigroupds.
             .
             A Semigroupoid is a Category without the requirement of identity arrows for every object in the category.
             .
             When working with comonads you often have the @\<*\>@ portion of an @Applicative@, but
             not the @pure@. This was captured in Uustalu and Vene's \"Essence of Dataflow Programming\"
             in the form of the @ComonadZip@ class in the days before @Applicative@. Apply provides a weaker invariant, but for the comonads used for data flow programming (found in the streams package), this invariant is preserved. Applicative function composition forms a semigroupoid.
             .
             Similarly many structures are nearly a comonad, but not quite, for instance lists provide a reasonable 'extend' operation in the form of 'tails', but do not always contain a value.
             .
             .
             Ideally the following relationships would hold:
             .
             > Traversable <---- Foldable <--- Functor ------> Alt ---------> Plus           Semigroupoid
             >      |               |            |                              |                  |
             >      v               v            v                              v                  v
             > Traversable1 <--- Foldable1     Apply --------> Applicative -> Alternative      Category
             >                                   |               |              |                  |
             >                                   v               v              v                  v
             >                                 Bind ---------> Monad -------> MonadPlus          Arrow
             >
             .
             Apply, Bind, and Extract give rise the Static, Kleisli and Cokleisli semigroupoids respectively.
             .
             This lets us remove many of the restrictions from various monad transformers
             as in many cases the binding operation or @\<*\>@ operation does not require them.
             .
             Finally, to work with these weaker structures it is beneficial to have containers
             that can provide stronger guarantees about their contents, so versions of 'Traversable'
             and 'Foldable' that can be folded with just a 'Semigroup' are added.
category: Control, Comonads
author: Edward A. Kmett
exposed: True
exposed-modules: Data.Functor.Alt Data.Functor.Apply
                 Data.Functor.Bind Data.Functor.Bind.Trans Data.Functor.Plus
                 Data.Functor.Extend Data.Semigroup.Foldable
                 Data.Semigroup.Traversable Data.Semigroupoid Data.Semigroupoid.Dual
                 Data.Semigroupoid.Static Data.Traversable.Instances
hidden-modules:
trusted: False
import-dirs: C:\Users\jim\snap-boiler-plate/semigroupoids-3.0\ghc-7.4.1
library-dirs: C:\Users\jim\snap-boiler-plate/semigroupoids-3.0\ghc-7.4.1
hs-libraries: HSsemigroupoids-3.0
extra-libraries:
extra-ghci-libraries:
include-dirs:
includes:
depends: base-4.5.0.0-597748f6f53a7442bcae283373264bb6
         comonad-3.0.0.2-c0ca41850c4df20023d657114fcc941d
         containers-0.4.2.1-7c54595400348f577b3b4a45691c5afd
         contravariant-0.2.0.2-d421c8fedeed7e1f14e7dcd7db0be48d
         semigroups-0.8.4.1-c335ae5ce0c9fbbdbc941f84af41a2a2
         transformers-0.3.0.0-e822211489f7414505ab945e95cef411
hugs-options:
cc-options:
ld-options:
framework-dirs:
frameworks:
haddock-interfaces: C:\Users\jim\snap-boiler-plate/\doc\semigroupoids-3.0\html\semigroupoids.haddock
haddock-html: C:\Users\jim\snap-boiler-plate/\doc\semigroupoids-3.0\html
